{
  "openapi": "3.0.0",
  "info": {
    "title": "Gemini AI REST API",
    "version": "1.0.0",
    "description": "API REST para interactuar con Gemini AI manteniendo contexto",
    "contact": {
      "name": "DANK1775",
      "url": "https://github.com/DANK1775"
    },
    "license": {
      "name": "ISC"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Servidor de desarrollo"
    },
    {
      "url": "https://gemini-rest.vercel.app/",
      "description": "Servidor de producción"
    }
  ],
  "components": {
    "schemas": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "request": {
            "type": "string",
            "description": "Prompt enviado por el usuario"
          },
          "response": {
            "type": "string",
            "description": "Respuesta generada por Gemini AI"
          },
          "sessionId": {
            "type": "string",
            "description": "ID de la sesión utilizada"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de la respuesta"
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 4000,
            "description": "Mensaje del usuario",
            "example": "¿Cuál es la capital de Francia?"
          },
          "sessionId": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]+$",
            "maxLength": 100,
            "description": "ID de la sesión (opcional, se generará uno automático si no se proporciona)",
            "example": "user123_session"
          }
        }
      },
      "ContextStats": {
        "type": "object",
        "properties": {
          "totalMessages": {
            "type": "integer",
            "description": "Total de mensajes en la sesión"
          },
          "userMessages": {
            "type": "integer",
            "description": "Número de mensajes del usuario"
          },
          "assistantMessages": {
            "type": "integer",
            "description": "Número de mensajes del asistente"
          },
          "maxMessages": {
            "type": "integer",
            "description": "Máximo número de mensajes permitidos"
          },
          "firstMessage": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp del primer mensaje"
          },
          "lastMessage": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp del último mensaje"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Descripción del error"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "description": "Campo que causó el error"
                },
                "message": {
                  "type": "string",
                  "description": "Mensaje de error específico"
                },
                "value": {
                  "type": "string",
                  "description": "Valor que causó el error"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Solicitud incorrecta",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Demasiadas solicitudes",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Demasiadas solicitudes desde esta IP"
                },
                "retryAfter": {
                  "type": "string",
                  "example": "1 minuto"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Error interno del servidor",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
    "paths": {
    "/api/ai": {
      "get": {
        "summary": "Genera respuesta de IA usando GET",
        "tags": [
          "AI"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "prompt",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4000
            },
            "description": "Prompt para enviar a Gemini AI",
            "example": "¿Cuál es la capital de Francia?"
          },
          {
            "in": "query",
            "name": "sessionId",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "maxLength": 100
            },
            "description": "ID de sesión para mantener contexto",
            "example": "user123_session"
          },
          {
            "in": "query",
            "name": "useContext",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "Si usar contexto de conversación",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Respuesta exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Genera respuesta de IA usando POST",
        "tags": [
          "AI"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "prompt"
                ],
                "properties": {
                  "prompt": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 4000,
                    "description": "Prompt para enviar a Gemini AI",
                    "example": "Explícame qué es el machine learning"
                  },
                  "sessionId": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "maxLength": 100,
                    "description": "ID de sesión para mantener contexto",
                    "example": "user123_session"
                  },
                  "useContext": {
                    "type": "boolean",
                    "default": true,
                    "description": "Si usar contexto de conversación",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Respuesta exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "summary": "Chat conversacional con historial",
        "tags": [
          "Chat"
        ],
        "description": "Endpoint optimizado para conversaciones naturales manteniendo el historial completo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Respuesta exitosa del chat",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mehttps://www.npmjs.com/package/json-storessage": {
                      "type": "string",
                      "description": "Mensaje del usuario"
                    },
                    "response": {
                      "type": "string",
                      "description": "Respuesta del asistente"
                    },
                    "sessionId": {
                      "type": "string",
                      "description": "ID de la sesión"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp de la respuesta"
                    },
                    "messageCount": {
                      "type": "integer",
                      "description": "Número total de mensajes en la sesión"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/context/{sessionId}": {
      "get": {
        "summary": "Obtener contexto de una sesión",
        "tags": [
          "Context"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "maxLength": 100
            },
            "description": "ID de la sesión",
            "example": "user123_session"
          }
        ],
        "responses": {
          "200": {
            "description": "Contexto de la sesión",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "description": "ID de la sesión"
                    },
                    "context": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "enum": [
                              "user",
                              "assistant"
                            ],
                            "description": "Rol del mensaje"
                          },
                          "content": {
                            "type": "string",
                            "description": "Contenido del mensaje"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp del mensaje"
                          }
                        }
                      }
                    },
                    "stats": {
                      "$ref": "#/components/schemas/ContextStats"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Limpiar contexto de una sesión",
        "tags": [
          "Context"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "maxLength": 100
            },
            "description": "ID de la sesión",
            "example": "user123_session"
          }
        ],
        "responses": {
          "200": {
            "description": "Contexto limpiado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contexto limpiado exitosamente"
                    },
                    "sessionId": {
                      "type": "string",
                      "description": "ID de la sesión"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp de la operación"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/context/{sessionId}/stats": {
      "get": {
        "summary": "Obtener estadísticas de una sesión",
        "tags": [
          "Context"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9_-]+$",
              "maxLength": 100
            },
            "description": "ID de la sesión",
            "example": "user123_session"
          }
        ],
        "responses": {
          "200": {
            "description": "Estadísticas de la sesión",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "description": "ID de la sesión"
                    },
                    "stats": {
                      "$ref": "#/components/schemas/ContextStats"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/context": {
      "get": {
        "summary": "Obtener todas las sesiones",
        "tags": [
          "Context"
        ],
        "responses": {
          "200": {
            "description": "Lista de todas las sesiones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessions": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user",
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    },
                    "totalSessions": {
                      "type": "integer",
                      "description": "Número total de sesiones"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/context/stats": {
      "get": {
        "summary": "Obtener estadísticas generales del sistema",
        "tags": [
          "Context"
        ],
        "responses": {
          "200": {
            "description": "Estadísticas generales del sistema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "systemStats": {
                      "type": "object",
                      "properties": {
                        "totalSessions": {
                          "type": "integer"
                        },
                        "totalMessages": {
                          "type": "integer"
                        },
                        "avgMessagesPerSession": {
                          "type": "number"
                        },
                        "oldestSession": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "newestSession": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "sessionsEnabled": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Información general de la API",
        "tags": [
          "General"
        ],
        "responses": {
          "200": {
            "description": "Información de la API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "info": {
                      "type": "string",
                      "example": "API REST de Gemini AI con contexto persistente y seguridad mejorada"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    },
                    "author": {
                      "type": "string",
                      "example": "GH: DANK1775 | DC: dank.js"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Contexto persistente",
                        "Rate limiting",
                        "Validación de entrada",
                        "Documentación Swagger"
                      ]
                    },
                    "endpoints": {
                      "type": "object",
                      "properties": {
                        "ai": {
                          "type": "string",
                          "example": "/api/ai"
                        },
                        "chat": {
                          "type": "string",
                          "example": "/api/chat"
                        },
                        "context": {
                          "type": "string",
                          "example": "/api/context"
                        },
                        "docs": {
                          "type": "string",
                          "example": "/api-docs"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Verificación de salud del servicio",
        "tags": [
          "General"
        ],
        "responses": {
          "200": {
            "description": "Estado del servicio",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "uptime": {
                      "type": "number",
                      "description": "Tiempo activo en segundos"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    },
                    "environment": {
                      "type": "string",
                      "example": "development"
                    },
                    "database": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "connected": {
                          "type": "boolean"
                        }
                      }
                    },
                    "sessions": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "AI",
      "description": "Endpoints para interactuar con Gemini AI"
    },
    {
      "name": "Chat",
      "description": "Endpoints para chat conversacional con historial"
    },
    {
      "name": "Context",
      "description": "Endpoints para gestionar el contexto de conversaciones"
    },
    {
      "name": "General",
      "description": "Endpoints generales de la API"
    }
  ]
}